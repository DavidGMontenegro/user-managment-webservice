{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//import UserManagment from '../services/signUp'\n\nimport SubjectManagement from '../../services/subjects';\nexport default {\n  props: ['userSubjects'],\n  data() {\n    return {\n      subjects: []\n    };\n  },\n  created() {\n    const accessToken = this.$route.params.token;\n    if (accessToken) {\n      this.loadSubjectData();\n    }\n  },\n  methods: {\n    async loadSubjectData() {\n      try {\n        for (const subject of this.userSubjects) {\n          if (subject.id_teacher) {\n            const teachers_name = await SubjectManagement.getTeachersName(subject.id_teacher);\n            const subject_name = await SubjectManagement.getSubjectName(subject.id_subject);\n            this.subjects.push({\n              id: subject.id_subject,\n              subject_name: subject_name.data.subjectName.name,\n              teachers_name: teachers_name.data.teacherName.name + ' ' + teachers_name.data.teacherName.surnames\n            });\n          } else {\n            const subject_name = await SubjectManagement.getSubjectName(subject.id_subject);\n            this.subjects.push({\n              id: subject.id_subject,\n              subject_name: subject_name.data.subjectName.name,\n              teachers_name: 'Unknown'\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["SubjectManagement","props","data","subjects","created","accessToken","$route","params","token","loadSubjectData","methods","subject","userSubjects","id_teacher","teachers_name","getTeachersName","subject_name","getSubjectName","id_subject","push","id","subjectName","name","teacherName","surnames","error","console","log"],"sources":["C:\\Users\\david\\Desktop\\BISITE\\ProyectoAroa\\frontend\\src\\views\\userViews\\Dashboard.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Your subjects are: </h1>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Profesores</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"subject in subjects\" :key=\"subject.id\">\r\n                    <td>{{ subject.id }}</td>\r\n                    <td>{{ subject.subject_name }}</td>\r\n                    <td>{{ subject.teachers_name }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n//import UserManagment from '../services/signUp'\r\n\r\nimport SubjectManagement from '../../services/subjects'\r\n\r\nexport default {\r\n  props: ['userSubjects'],\r\n  data() {\r\n    return {\r\n      subjects: []\r\n    };\r\n  },\r\n  created() {\r\n    const accessToken = this.$route.params.token;\r\n    if (accessToken) {\r\n      this.loadSubjectData()\r\n    }\r\n  },\r\n  methods: {\r\n    async loadSubjectData(){\r\n        try {\r\n            for (const subject of this.userSubjects){\r\n                if (subject.id_teacher) {\r\n                    const teachers_name = await SubjectManagement.getTeachersName(subject.id_teacher);\r\n                const subject_name = await SubjectManagement.getSubjectName(subject.id_subject);\r\n                this.subjects.push({id: subject.id_subject,\r\n                                subject_name: subject_name.data.subjectName.name,\r\n                                teachers_name: teachers_name.data.teacherName.name + ' ' + teachers_name.data.teacherName.surnames})\r\n                } else {\r\n                    const subject_name = await SubjectManagement.getSubjectName(subject.id_subject);\r\n                this.subjects.push({id: subject.id_subject,\r\n                                subject_name: subject_name.data.subjectName.name,\r\n                                teachers_name: 'Unknown'})\r\n                }\r\n            }\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n}\r\n\r\nh1 {\r\n    text-align: center;\r\n    margin-top: 0px;\r\n}\r\n\r\ntable {\r\n    margin: auto;\r\n    border-collapse: collapse;\r\n    border: 2px solid #2e2e2e;\r\n  \r\n}\r\n\r\nth {\r\n    font-size: 20px;\r\n    padding: 10px 30px;\r\n}\r\n\r\ntd {\r\n    padding: 10px 30px;\r\n    font-size: 18px;\r\n    border: 2px solid #2e2e2e;\r\n    text-align: center;\r\n    font-weight: 500;\r\n}\r\n</style>"],"mappings":";AAuBA;;AAEA,OAAOA,iBAAgB,MAAO,yBAAwB;AAEtD,eAAe;EACbC,KAAK,EAAE,CAAC,cAAc,CAAC;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,WAAU,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,KAAK;IAC5C,IAAIH,WAAW,EAAE;MACf,IAAI,CAACI,eAAe,CAAC;IACvB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAAA,EAAE;MACnB,IAAI;QACA,KAAK,MAAME,OAAM,IAAK,IAAI,CAACC,YAAY,EAAC;UACpC,IAAID,OAAO,CAACE,UAAU,EAAE;YACpB,MAAMC,aAAY,GAAI,MAAMd,iBAAiB,CAACe,eAAe,CAACJ,OAAO,CAACE,UAAU,CAAC;YACrF,MAAMG,YAAW,GAAI,MAAMhB,iBAAiB,CAACiB,cAAc,CAACN,OAAO,CAACO,UAAU,CAAC;YAC/E,IAAI,CAACf,QAAQ,CAACgB,IAAI,CAAC;cAACC,EAAE,EAAET,OAAO,CAACO,UAAU;cAC1BF,YAAY,EAAEA,YAAY,CAACd,IAAI,CAACmB,WAAW,CAACC,IAAI;cAChDR,aAAa,EAAEA,aAAa,CAACZ,IAAI,CAACqB,WAAW,CAACD,IAAG,GAAI,GAAE,GAAIR,aAAa,CAACZ,IAAI,CAACqB,WAAW,CAACC;YAAQ,CAAC;UACnH,OAAO;YACH,MAAMR,YAAW,GAAI,MAAMhB,iBAAiB,CAACiB,cAAc,CAACN,OAAO,CAACO,UAAU,CAAC;YACnF,IAAI,CAACf,QAAQ,CAACgB,IAAI,CAAC;cAACC,EAAE,EAAET,OAAO,CAACO,UAAU;cAC1BF,YAAY,EAAEA,YAAY,CAACd,IAAI,CAACmB,WAAW,CAACC,IAAI;cAChDR,aAAa,EAAE;YAAS,CAAC;UACzC;QACJ;MACJ,CAAC,QAAOW,KAAK,EAAE;QACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}