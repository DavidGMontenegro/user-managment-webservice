{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//import UserManagment from '../services/signUp'\n\nimport SubjectManagement from '../../services/subjects';\nexport default {\n  props: ['userSubjects'],\n  data() {\n    return {\n      subjects: []\n    };\n  },\n  created() {\n    const accessToken = this.$route.params.token;\n    if (accessToken) {\n      this.loadSubjectData();\n    }\n  },\n  methods: {\n    async loadSubjectData() {\n      try {\n        for (const subject of this.userSubjects) {\n          const teachers_name = await SubjectManagement.getTeachersName(subject.id_teacher);\n          const subject_name = await SubjectManagement.getSubjectName(subject.id_subject);\n          this.subject.teachers_name = teachers_name.data.teacherName.name + ' ' + teachers_name.data.teacherName.name;\n          this.subject.subject_name = subject_name.data.subjectName.name;\n          this.subjects.id = this.userSubjects.id;\n          this.subjects.push({\n            id: 1,\n            subject_name: subject_name.data.subjectName.name,\n            teachers_name: teachers_name.data.teacherName.name + ' ' + teachers_name.data.teacherName.name\n          });\n          console.log('Profesor', teachers_name);\n          console.log('Asignatura', subject_name);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["SubjectManagement","props","data","subjects","created","accessToken","$route","params","token","loadSubjectData","methods","subject","userSubjects","teachers_name","getTeachersName","id_teacher","subject_name","getSubjectName","id_subject","teacherName","name","subjectName","id","push","console","log","error"],"sources":["C:\\Users\\david\\Desktop\\BISITE\\ProyectoAroa\\frontend\\src\\views\\userViews\\Dashboard.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Tus asignaturas son: </h1>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Profesores</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"subject in subjects\" :key=\"subject.id\">\r\n                    <td>{{ subject.id }}</td>\r\n                    <td>{{ subject.subject_name }}</td>\r\n                    <td>{{ subject.teachers_name }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n//import UserManagment from '../services/signUp'\r\n\r\nimport SubjectManagement from '../../services/subjects'\r\n\r\nexport default {\r\n  props: ['userSubjects'],\r\n  data() {\r\n    return {\r\n      subjects: []\r\n    };\r\n  },\r\n  created() {\r\n    const accessToken = this.$route.params.token;\r\n    if (accessToken) {\r\n      this.loadSubjectData()\r\n    }\r\n  },\r\n  methods: {\r\n    async loadSubjectData(){\r\n        try {\r\n            for (const subject of this.userSubjects){\r\n                const teachers_name = await SubjectManagement.getTeachersName(subject.id_teacher);\r\n                const subject_name = await SubjectManagement.getSubjectName(subject.id_subject);\r\n                this.subject.teachers_name = teachers_name.data.teacherName.name + ' ' + teachers_name.data.teacherName.name;\r\n                this.subject.subject_name = subject_name.data.subjectName.name;\r\n                this.subjects.id = this.userSubjects.id;\r\n                this.subjects.push({id: 1,\r\n                                subject_name: subject_name.data.subjectName.name,\r\n                                teachers_name: teachers_name.data.teacherName.name + ' ' + teachers_name.data.teacherName.name})\r\n                console.log('Profesor', teachers_name)\r\n                console.log('Asignatura', subject_name)\r\n            }\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n}\r\n\r\nh1 {\r\n    text-align: center;\r\n}\r\n\r\ntable {\r\n    margin: auto;\r\n    border-collapse: collapse;\r\n    border: 2px solid #2e2e2e;\r\n  \r\n}\r\n\r\nth {\r\n    font-size: 16px;\r\n    padding: 10px 20px;\r\n}\r\n\r\ntd {\r\n    padding: 10px 20px;\r\n    font-size: 14px;\r\n    border: 2px solid #2e2e2e;\r\n    text-align: center;\r\n    font-weight: 500;\r\n}\r\n\r\n.btn {\r\n      display: inline-block;\r\n      padding: 10px 20px;\r\n      background-color: #007bff;\r\n      font-size: 18px;\r\n      color: white;\r\n      border-radius: 5px;\r\n      text-decoration: none;\r\n      transition: background-color 0.3s;\r\n      height: min-content;\r\n    }\r\n\r\n    .btn:hover {\r\n      background-color: #0056b3;\r\n    }\r\n</style>"],"mappings":";AAuBA;;AAEA,OAAOA,iBAAgB,MAAO,yBAAwB;AAEtD,eAAe;EACbC,KAAK,EAAE,CAAC,cAAc,CAAC;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,WAAU,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,KAAK;IAC5C,IAAIH,WAAW,EAAE;MACf,IAAI,CAACI,eAAe,CAAC;IACvB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAAA,EAAE;MACnB,IAAI;QACA,KAAK,MAAME,OAAM,IAAK,IAAI,CAACC,YAAY,EAAC;UACpC,MAAMC,aAAY,GAAI,MAAMb,iBAAiB,CAACc,eAAe,CAACH,OAAO,CAACI,UAAU,CAAC;UACjF,MAAMC,YAAW,GAAI,MAAMhB,iBAAiB,CAACiB,cAAc,CAACN,OAAO,CAACO,UAAU,CAAC;UAC/E,IAAI,CAACP,OAAO,CAACE,aAAY,GAAIA,aAAa,CAACX,IAAI,CAACiB,WAAW,CAACC,IAAG,GAAI,GAAE,GAAIP,aAAa,CAACX,IAAI,CAACiB,WAAW,CAACC,IAAI;UAC5G,IAAI,CAACT,OAAO,CAACK,YAAW,GAAIA,YAAY,CAACd,IAAI,CAACmB,WAAW,CAACD,IAAI;UAC9D,IAAI,CAACjB,QAAQ,CAACmB,EAAC,GAAI,IAAI,CAACV,YAAY,CAACU,EAAE;UACvC,IAAI,CAACnB,QAAQ,CAACoB,IAAI,CAAC;YAACD,EAAE,EAAE,CAAC;YACTN,YAAY,EAAEA,YAAY,CAACd,IAAI,CAACmB,WAAW,CAACD,IAAI;YAChDP,aAAa,EAAEA,aAAa,CAACX,IAAI,CAACiB,WAAW,CAACC,IAAG,GAAI,GAAE,GAAIP,aAAa,CAACX,IAAI,CAACiB,WAAW,CAACC;UAAI,CAAC;UAC/GI,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEZ,aAAa;UACrCW,OAAO,CAACC,GAAG,CAAC,YAAY,EAAET,YAAY;QAC1C;MACJ,CAAC,QAAOU,KAAK,EAAE;QACXF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACtB;IACJ;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}